
openapi: 3.0.3
info:
  title: Homni API
  description: API for the Homni platform (Bytt.no × Boligmappa.no × Propr.no)
  version: 1.0.0
  contact:
    name: Homni Support
    email: support@homni.no
    url: https://homni.no/support
servers:
  - url: https://api.homni.no/v1
    description: Production server
  - url: https://staging-api.homni.no/v1
    description: Staging server
  - url: http://localhost:54321
    description: Local development

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
    
    Lead:
      type: object
      required:
        - id
        - submitted_by
        - title
        - description
        - category
        - status
      properties:
        id:
          type: string
          format: uuid
        submitted_by:
          type: string
          format: uuid
        company_id:
          type: string
          format: uuid
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        metadata:
          type: object
        title:
          type: string
        description:
          type: string
        category:
          type: string
        status:
          type: string
          enum: [new, in_progress, won, lost]
        lead_type:
          type: string
          default: general
    
    UserProfile:
      type: object
      required:
        - id
        - user_id
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
        metadata:
          type: object
        updated_at:
          type: string
          format: date-time
        preferences:
          type: object
          nullable: true
        address:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        profile_picture_url:
          type: string
          nullable: true
        full_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        display_name:
          type: string
          nullable: true
    
    CompanyProfile:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        user_id:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        status:
          type: string
          default: active
        tags:
          type: array
          items:
            type: string
        contact_name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        industry:
          type: string
          nullable: true
        subscription_plan:
          type: string
          default: free
        modules_access:
          type: array
          items:
            type: string
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

paths:
  /leads:
    get:
      summary: Get leads
      description: Retrieve leads based on filters
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [new, in_progress, won, lost]
        - name: category
          in: query
          schema:
            type: string
        - name: company_id
          in: query
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Successfully retrieved leads
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Lead'
                  count:
                    type: integer
                  total:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      summary: Create a new lead
      description: Create a new lead in the system
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - category
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                metadata:
                  type: object
      responses:
        '201':
          description: Lead created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  
  /leads/{id}:
    get:
      summary: Get lead by ID
      description: Retrieve a specific lead by its ID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully retrieved lead
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '404':
          description: Lead not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      summary: Update a lead
      description: Update an existing lead
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                category:
                  type: string
                status:
                  type: string
                  enum: [new, in_progress, won, lost]
                company_id:
                  type: string
                  format: uuid
                metadata:
                  type: object
      responses:
        '200':
          description: Lead updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lead'
        '400':
          description: Invalid request
        '404':
          description: Lead not found
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  
  /profile:
    get:
      summary: Get user profile
      description: Retrieve the current user's profile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          description: Unauthorized
    patch:
      summary: Update user profile
      description: Update the current user's profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                full_name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                address:
                  type: string
                region:
                  type: string
                display_name:
                  type: string
                preferences:
                  type: object
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '400':
          description: Invalid request
        '401':
          description: Unauthorized
  
  /companies:
    get:
      summary: Get companies
      description: Retrieve companies based on filters
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, inactive, suspended]
        - name: industry
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Successfully retrieved companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CompanyProfile'
                  count:
                    type: integer
                  total:
                    type: integer
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
