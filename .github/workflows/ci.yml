name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Update package scripts
      run: node update-package-scripts.js

    - name: Install dependencies
      run: npm ci

    - name: Clean invalid dependencies
      run: npx ts-node scripts/update-package-final.ts

    - name: TypeScript Check
      run: npm run typecheck

    - name: Lint Check
      run: npm run lint

    - name: Build Check
      run: npm run build

    - name: Unit Tests with Coverage
      run: npm run test:coverage

    - name: Security Audit
      run: npm audit --audit-level=high
      continue-on-error: true

    - name: Repository Health
      run: npm run repo:health
      continue-on-error: true

    - name: Upload Coverage Reports
      uses: codecov/codecov-action@v3
      if: success()
      with:
        fail_ci_if_error: false

  api-gateway-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: services/api-gateway
    env:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/postgres
      SUPABASE_JWKS_URL: https://kkazhcihooovsuwravhs.supabase.co/.well-known/jwks_public
      HMAC_OUTBOUND_SECRET: test-secret-key
      CORS_ALLOW_ORIGINS: https://homni.app,https://staging.homni.app
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev,test]"
      
      - name: Run API Gateway tests
        run: pytest -v
      
      - name: Export OpenAPI spec
        run: python ../../scripts/export_openapi.py
      
      - name: Validate OpenAPI changes
        run: |
          if git diff --exit-code docs/api/openapi.yaml; then
            echo "✅ OpenAPI spec is up to date"
          else
            echo "⚠️  OpenAPI spec has changed - remember to commit"
            git diff docs/api/openapi.yaml
          fi

  e2e-tests:
    runs-on: ubuntu-latest
    needs: health-check
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Update package scripts
      run: node update-package-scripts.js

    - name: Install dependencies
      run: npm ci

    - name: Clean invalid dependencies
      run: npx ts-node scripts/update-package-final.ts

    - name: Install Playwright
      run: npx playwright install --with-deps

    - name: Build application
      run: npm run build

    - name: Run E2E tests
      run: npm run e2e
      continue-on-error: true

    - name: Upload E2E test results
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-test-results
        path: test-results/